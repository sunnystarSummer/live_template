import 'dart:async';
import 'package:flutter/widgets.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

/// Bloc Example

class $NAME$Data {}

abstract class Abs$NAME$Event {}

class $NAME$Event01 extends Abs$NAME$Event {
  $NAME$Event01();
}

class $NAME$Bloc extends Bloc<Abs$NAME$Event, $NAME$Data> {
  $NAME$Bloc() : super($NAME$Data()) {
    on<$NAME$Event01>((event, emit) {
      //ToDo Business Logic
      
      _counterController.sink.add(0);
      emit(state);
    });
  }

  final StreamController<int> _counterController = StreamController<int>();
  Stream<int> get counterStream => _counterController.stream;
}

class $NAME$View extends StatelessWidget {
  const $NAME$View({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (_) => $NAME$Bloc(),
      child: _$NAME$Page(),
    );
  }
}

class _$NAME$Page extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return BlocBuilder<$NAME$Bloc, $NAME$Data>(builder: (context, state) {
      final bloc = context.select(($NAME$Bloc bloc) => bloc);
      
      return StreamBuilder<int>(
        stream: bloc.counterStream,
        builder: (context, snapshot) {
          if (snapshot.hasData) {

          }
          
          return const SizedBox.shrink($END$);
        },
      );
    });
  }
}
